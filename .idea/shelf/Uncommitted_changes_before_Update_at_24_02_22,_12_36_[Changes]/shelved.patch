Index: src/main/java/Path/Move.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Path;\n\nimport Agents.Agent;\nimport Agents.Map;\nimport java.lang.Integer;\nimport java.util.*;\n\npublic class Move {\n    // 8 possible moves: each is 45° angles\n    //convertor: angle to director based on a range\n\n    //Left: -90 ° = -45 x 2\npublic void leftMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()-1);\n}\n    //Right: +90° = +45 x 2\npublic void rightMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()+1);\n}\n    //Up: +0°\npublic void upMove(Agent agent){\n    agent.setAgentPositionY(agent.getAgentPositionY()+1);\n}\n    //Down: -180° = -45 x 4\npublic void downMove(Agent agent){\n    agent.setAgentPositionY(agent.getAgentPositionY()-1);\n}\n    //Diagonal left-Up: +45°\npublic void diagonalLeftUpMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()-1);\n    agent.setAgentPositionY(agent.getAgentPositionY()+1);\n}\n    //Diagonal Right-Up: -45°\npublic void diagonalRightUpMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()+1);\n    agent.setAgentPositionY(agent.getAgentPositionY()+1);\n}\n    //Diagonal left-Down: +225 = -45 x 5\npublic void diagonalLeftDownMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()-1);\n    agent.setAgentPositionY(agent.getAgentPositionY()-1);\n}\n    //Diagonal Right-Down: +135° = +45 x 3\npublic void diagonalRightDownMove(Agent agent){\n    agent.setAgentPositionX(agent.getAgentPositionX()+1);\n    agent.setAgentPositionY(agent.getAgentPositionY()-1);\n}\n\npublic boolean canMoveThere(Map map, int x, int y){\n    /**\n     * returns true if an agent can move to the (x,y) field\n     * on the map that is passed to this method\n     */\n\n    if(map.getFieldCost(x,y)==Integer.MAX_VALUE){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\n    public  ArrayList <int[]> legalMoveGenerator(Agent agent, Map map){\n\n    //call all the above methods\n\n    //check for validity;\n    // if output coordonates == MAX_VALUE\n    //if another agent is currently on this position\n\n    //return the list of possible tile coordonates to visit\n\n\n    }\n\n       /* HELPER METHOD FOR A_STAR:\n        if we make 1 move in direction of Goal\n                the cost of the Move\n                        Empty_Cell is 1 : later we will discriminate on\n                        Wall is positive_infinity (Integer.MAX_VALUE)\n\n                the remaining distance to Local_Goal\n                        Map_Limit\n                        TeamMate_Trace\n                        Opponent_Trace\n        */\n\n\n\n\n    public int[] goalUpdator(Agent agent, Map map) {\n    /* Sort the option from most to less costly\n        Need to sort the distance from AgentPosition to all know Map Limits\n        Need to sort the distance from AgentPosition to all know Traces\n     Outputs the Minimum of both\n     */\n\n\n    }\n\n    // Calculates the Manhattan distance\n    public int manhattanHeuristic(int x, int y, int goalX, int goalY){\n        return (x - goalX) + (y - goalY);\n    }\n\n\n\n   /* A_Star : Path Finding Algorithm\n   * OUTPUT: an integer that describes how costy(beneficial) the potential Move is to the Agent\n   * */\n   public int aStar(Agent agent, Map map, int initialCost){\n        int x = agent.getAgentPositionX();\n        int y = agent.getAgentPositionY();\n\n        int[] newGoal = goalUpdator(agent, map);\n\n        /*What are the possible Moves to reach the Goal ?\n            Candidate Paths\n        */\n\n       int goalDistance =  manhattanHeuristic(x, y, newGoal[0], newGoal[1]);\n\n       return 0;\n    }\n\n\n    public Collection<Position> getPath(Agent agent, Map map, Position targetPos){\n\n        HashMap<Position, Boolean> vis = new HashMap<>();\n        HashMap<Position, Position> prev = new HashMap<>();\n\n        List<Position> directions = new LinkedList<>();\n        Queue<Position> q = new LinkedList<>();\n        Position current = new Position(agent.getAgentPositionX(), agent.getAgentPositionY());\n        q.add(current);\n        vis.put(current, true);\n        while(!q.isEmpty()){\n            current = q.remove();\n            if (current.equals(targetPos)){\n                break;\n            }else{\n                for(Position node : current.getNeighbours(map)){\n                    if(!vis.containsKey(node)){\n                        q.add(node);\n                        vis.put(node, true);\n                        prev.put(node, current);\n                    }\n                }\n            }\n        }\n        if (!current.samePos(targetPos)){\n            //Finished\n        }\n        for(Position pos = targetPos; pos != null; pos = prev.get(pos)) {\n            directions.add(pos);\n        }\n        Collections.reverse(directions);\n        return directions;\n    }\n\n\n\n    class Position{\n\n       int x;\n       int y;\n\n       public Position(int x, int y){\n           this.x = x;\n           this.y = y;\n       }\n\n\n       public float getDistance(){\n            return 0;\n       }\n\n       public boolean samePos(Position pos){\n           return this.x == pos.x && this.y == pos.y;\n       }\n\n       public Collection<Position> getNeighbours(Map map){\n\n           List<Position> neighbours = new ArrayList<>();\n           neighbours.add(new Position(this.x+1, this.y));\n           neighbours.add(new Position(this.x+1, this.y-1));\n           neighbours.add(new Position(this.x+1, this.y+1));\n           neighbours.add(new Position(this.x, this.y-1));\n\n           neighbours.add(new Position(this.x, this.y+1));\n           neighbours.add(new Position(this.x-1, this.y+1));\n           neighbours.add(new Position(this.x-1, this.y-1));\n           neighbours.add(new Position(this.x-1, this.y));\n\n           List<Position> delete = new ArrayList<>();\n           for(Position pos : neighbours){\n               if (map.getFieldCost(pos.x, pos.y) == Integer.MAX_VALUE){\n                   delete.add(pos);\n               }else if (pos.x > map.getMapWidth()+1 || pos.y > map.getMapHeight()+1){\n                   delete.add(pos);\n               }\n               // check if position has a wall or is outside the map.\n               // remove from neighboours if so\n           }\n\n           for (Position pos : delete){\n               neighbours.remove(pos);\n           }\n\n\n           return neighbours;\n       }\n\n\n\n    }\n\n//public int\n//       while(/* Goal not reached, equivalent to Position of Agent != Goal Position */){\n//        aStar(agent, map, initalCost);\n//    }\n\n\n   //D*\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Path/Move.java b/src/main/java/Path/Move.java
--- a/src/main/java/Path/Move.java	(revision ef8b961bb0c6846cd710d49db850105ca1154b46)
+++ b/src/main/java/Path/Move.java	(date 1645702560328)
@@ -65,10 +65,10 @@
     //call all the above methods
 
     //check for validity;
-    // if output coordonates == MAX_VALUE
+    // if output coordinates == MAX_VALUE
     //if another agent is currently on this position
 
-    //return the list of possible tile coordonates to visit
+    //return the list of possible tile coordinates to visit
 
 
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"99094a21-1a8a-4d5d-8078-78165bded4be\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Path/Move.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Path/Move.java\" afterDir=\"false\" />\n    </list>\n    <list id=\"28df9b80-3b48-4666-932e-bb6f4ca300e0\" name=\"Changes by cmjus\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Path/Move.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Path/Move.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"algoWithoutControllers\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"controller-for-merge\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"LineStatusTrackerManager\">\n    <file path=\"$PROJECT_DIR$/src/main/java/Path/Move.java\">\n      <ranges>\n        <range start1=\"108\" end1=\"109\" start2=\"108\" end2=\"109\" changelist=\"99094a21-1a8a-4d5d-8078-78165bded4be\" />\n        <range start1=\"111\" end1=\"113\" start2=\"111\" end2=\"113\" changelist=\"99094a21-1a8a-4d5d-8078-78165bded4be\" />\n        <range start1=\"124\" end1=\"124\" start2=\"124\" end2=\"216\" changelist=\"28df9b80-3b48-4666-932e-bb6f4ca300e0\" />\n      </ranges>\n    </file>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"256KGD7WaqHSuu6w26u96APtVh7\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"99094a21-1a8a-4d5d-8078-78165bded4be\" name=\"Changes\" comment=\"\" />\n      <created>1644842061035</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1644842061035</updated>\n      <workItem from=\"1645613588695\" duration=\"3326000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"starting code is from Controller-For-Merge branch\">\n      <created>1645613707001</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1645613707001</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"starting code is from Controller-For-Merge branch\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"starting code is from Controller-For-Merge branch\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ef8b961bb0c6846cd710d49db850105ca1154b46)
+++ b/.idea/workspace.xml	(date 1645702451034)
@@ -4,12 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="99094a21-1a8a-4d5d-8078-78165bded4be" name="Changes" comment="">
+    <list default="true" id="99094a21-1a8a-4d5d-8078-78165bded4be" name="Changes" comment="A* algorithm">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Path/Move.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Path/Move.java" afterDir="false" />
-    </list>
-    <list id="28df9b80-3b48-4666-932e-bb6f4ca300e0" name="Changes by cmjus" comment="">
-      <change beforePath="$PROJECT_DIR$/src/main/java/Path/Move.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Path/Move.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -43,15 +39,6 @@
       <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
     </file-type-list>
   </component>
-  <component name="LineStatusTrackerManager">
-    <file path="$PROJECT_DIR$/src/main/java/Path/Move.java">
-      <ranges>
-        <range start1="108" end1="109" start2="108" end2="109" changelist="99094a21-1a8a-4d5d-8078-78165bded4be" />
-        <range start1="111" end1="113" start2="111" end2="113" changelist="99094a21-1a8a-4d5d-8078-78165bded4be" />
-        <range start1="124" end1="124" start2="124" end2="216" changelist="28df9b80-3b48-4666-932e-bb6f4ca300e0" />
-      </ranges>
-    </file>
-  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -81,7 +68,8 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1644842061035</updated>
-      <workItem from="1645613588695" duration="3326000" />
+      <workItem from="1645613588695" duration="4441000" />
+      <workItem from="1645701760031" duration="511000" />
     </task>
     <task id="LOCAL-00001" summary="starting code is from Controller-For-Merge branch">
       <created>1645613707001</created>
@@ -90,7 +78,21 @@
       <option name="project" value="LOCAL" />
       <updated>1645613707001</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="A* algorithm">
+      <created>1645616987133</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1645616987133</updated>
+    </task>
+    <task id="LOCAL-00003" summary="A* algorithm">
+      <created>1645617009022</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1645617009022</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -109,6 +111,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="starting code is from Controller-For-Merge branch" />
-    <option name="LAST_COMMIT_MESSAGE" value="starting code is from Controller-For-Merge branch" />
+    <MESSAGE value="A* algorithm" />
+    <option name="LAST_COMMIT_MESSAGE" value="A* algorithm" />
   </component>
 </project>
\ No newline at end of file
