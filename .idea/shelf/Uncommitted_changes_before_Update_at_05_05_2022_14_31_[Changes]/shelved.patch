Index: src/main/java/phase2/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package phase2;\r\n\r\nimport Agents.Tile;\r\nimport Controller.Variables;\r\nimport Controller.Wall;\r\nimport phase2.RayCasting.RayCasting;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Map {\r\n\r\n    private Variables variables;\r\n    private Tile[][] map;\r\n    private int xSize;\r\n    private int ySize;\r\n    private ArrayList<AgentTeam> listOfAllAgents;\r\n    private AgentTeam listOfGuards;\r\n    private AgentTeam listOfIntruders;\r\n    private ArrayList<int[]> wallpoints = new ArrayList<>();\r\n\r\n\r\n\r\n    public Map(String[] unparsedVars) {\r\n        this.variables = new Variables();\r\n        this.variables.setVariables(unparsedVars);\r\n        this.map = new Tile[variables.getHeight()][variables.getWidth()];\r\n        int guardsSize = this.variables.getNumberOfGuards();\r\n        //int intrudersSize = this.variables.getNumberOfIntruders(); //parser doesnt work for this\r\n        int intrudersSize = 4;\r\n        this.wallpoints = wallPoints();\r\n        //printWalls();\r\n        xSize = variables.getHeight();\r\n        ySize = variables.getWidth();\r\n        listOfGuards = new AgentTeam(guardsSize,0,this.variables.getSpawnAreaGuards().getCoords());\r\n        //listOfGuards.placeOnSpawn();\r\n        //listOfIntruders = new AgentTeam(intrudersSize,1,this.variables.getSpawnAreaIntruders().getCoords()); //parser doesnt work\r\n        listOfIntruders = new AgentTeam(intrudersSize,1,this.intruderSpawnWorkaround());\r\n        //listOfGuards.placeOnSpawn();\r\n        listOfAllAgents = new ArrayList<>();\r\n        listOfAllAgents.add(listOfGuards);\r\n        listOfAllAgents.add(listOfIntruders);\r\n        initializeMap();\r\n    }\r\n\r\n\r\n\r\n    private ArrayList<Integer> intruderSpawnWorkaround(){\r\n        int x = 0;\r\n        int y =0;\r\n        ArrayList<Integer> spawn = new ArrayList<>();\r\n        spawn.add(x);\r\n        spawn.add(y);\r\n        y = 5;\r\n        spawn.add(x);\r\n        spawn.add(y);\r\n        x = 5;\r\n        spawn.add(x);\r\n        spawn.add(y);\r\n        x =0;\r\n        spawn.add(x);\r\n        spawn.add(y);\r\n        return spawn;\r\n    }\r\n\r\n\r\n\r\n    public void allAgentsInit(){\r\n        this.listOfGuards.placeOnSpawn();\r\n        //System.out.println(this.listOfGuards);\r\n        this.listOfIntruders.placeOnSpawn();\r\n    }\r\n\r\n    /*\r\n    * updateAllAgents: calls a method that updates a team of agents (moves them, updates their vision etc)\r\n    * */\r\n    public void updateAllAgents(){\r\n        RayCasting rayCasting = new RayCasting(this);\r\n        for(AgentTeam team: listOfAllAgents){\r\n            team.updateAgents(this,rayCasting);\r\n        }\r\n    }\r\n\r\n\r\n    private void initializeMap(){\r\n        int[] coord = new int[2];\r\n        coord[0] = 0;\r\n        coord[1] = 0;\r\n        System.out.println(this.wallpoints.get(0)==coord);\r\n        System.out.println(this.wallpoints.get(0)[0]+\" \"+this.wallpoints.get(0)[1]);\r\n        for(int i = 0; i<this.xSize; i++)\r\n            for(int j = 0; j<this.ySize; j++){\r\n                this.map[i][j] = determineTile(i,j);\r\n                //System.out.println(determineTile(i,j));\r\n            }\r\n        //System.out.println(this);\r\n    }\r\n\r\n    private Tile determineTile(int i, int j){\r\n       Tile tile = new Tile(i,j);\r\n        if(isAWall(i,j)){\r\n            tile.placeWall();\r\n        }\r\n        if(hasAgent(i,j)){\r\n            tile.placeAgent();\r\n        }\r\n        return new Tile(i,j);\r\n    }\r\n\r\n    private boolean hasAgent(int x, int y){\r\n        int[] coord = new int[2];\r\n        coord[0] = x;\r\n        coord[1] = y;\r\n        return listOfGuards.getAgentPositions().contains(coord) || listOfIntruders.getAgentPositions().contains(coord);\r\n    }\r\n\r\n    private boolean isAWall(int x, int y){\r\n        int[] coord = new int[2];\r\n        coord[0] = x;\r\n        coord[1] = y;\r\n        //printWalls();\r\n        return this.wallpoints.contains(coord);\r\n    }\r\n\r\n    private ArrayList<int[]> wallPoints() {\r\n        ArrayList<Wall> walls = this.variables.getWalls();\r\n        ArrayList<int[]> wallPoints = new ArrayList<>();\r\n        for(Wall w: walls){\r\n            //System.out.println(w.getPoints().size());\r\n            wallPoints.addAll(w.getPoints());\r\n            for(int[] xy : w.getPoints()){\r\n        }\r\n        printWalls();\r\n        return wallPoints;\r\n    }\r\n\r\n    private void printWalls(){\r\n        System.out.println(\"wall size = \"+wallpoints.size());\r\n        for(int[] coords : wallpoints){\r\n            System.out.println(\"x: \"+coords[0]+\" y: \"+coords[1]);\r\n        }\r\n    }\r\n\r\n    private ArrayList<int[]> teleportPoints(){\r\n        return new ArrayList<int[]>();\r\n    }\r\n\r\n    public void moveAgentToPosition(Agent agent, int[] position){\r\n        /** moves agent to coordinates if possible */\r\n        if(canMoveTo(position)){\r\n            agent.moveTo(position[0],position[1]);\r\n        }\r\n    }\r\n\r\n    private boolean canMoveTo(int[] pos){\r\n        return inMap(pos) && !map[pos[0]][pos[1]].hasWall() && !map[pos[0]][pos[1]].hasAgent();\r\n    }\r\n\r\n    public boolean inMap(int[] position){\r\n        return position[0] < xSize && position[1] < ySize && position[0] > 0 && position[1] > 0;\r\n    }\r\n\r\n    // Getters n Setters\r\n    public void setVariables(Variables variables) {\r\n        this.variables = variables;\r\n    }\r\n\r\n    public Variables getVariables() {\r\n        return variables;\r\n    }\r\n\r\n    public Tile getTile(int x, int y){\r\n        return this.map[x][y];\r\n    }\r\n\r\n    public Tile[][] getTiles(){\r\n        return this.map;\r\n    }\r\n\r\n    public int getMapHeight(){\r\n        return this.ySize;\r\n    }\r\n\r\n    public int getMapWidth(){\r\n        return this.xSize;\r\n    }\r\n\r\n    public String toString(){\r\n        StringBuilder s = new StringBuilder();\r\n\r\n        for(int i = 0; i<xSize;i++){\r\n            for(int j = 0; j<ySize; j++){\r\n                String c = map[i][j].toString();\r\n                s.append(c);\r\n            }\r\n            s.append(\"\\n\");\r\n        }\r\n\r\n        return s.toString();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/phase2/Map.java b/src/main/java/phase2/Map.java
--- a/src/main/java/phase2/Map.java	
+++ b/src/main/java/phase2/Map.java	
@@ -20,17 +20,21 @@
 
 
 
+
     public Map(String[] unparsedVars) {
         this.variables = new Variables();
         this.variables.setVariables(unparsedVars);
-        this.map = new Tile[variables.getHeight()][variables.getWidth()];
+        this.map = new Tile[variables.getWidth()][variables.getHeight()];
+        xSize = variables.getWidth();
+        ySize = variables.getHeight();
+        tileInit();
         int guardsSize = this.variables.getNumberOfGuards();
         //int intrudersSize = this.variables.getNumberOfIntruders(); //parser doesnt work for this
         int intrudersSize = 4;
+        //initializeMap();
         this.wallpoints = wallPoints();
         //printWalls();
-        xSize = variables.getHeight();
-        ySize = variables.getWidth();
+
         listOfGuards = new AgentTeam(guardsSize,0,this.variables.getSpawnAreaGuards().getCoords());
         //listOfGuards.placeOnSpawn();
         //listOfIntruders = new AgentTeam(intrudersSize,1,this.variables.getSpawnAreaIntruders().getCoords()); //parser doesnt work
@@ -40,9 +44,16 @@
         listOfAllAgents.add(listOfGuards);
         listOfAllAgents.add(listOfIntruders);
         initializeMap();
+        System.out.println(this);
     }
 
-
+    private void tileInit(){
+        for(int i = 0; i<xSize;i++){
+            for(int j = 0; j<ySize; j++){
+                map[i][j] = new Tile(i,j);
+            }
+        }
+    }
 
     private ArrayList<Integer> intruderSpawnWorkaround(){
         int x = 0;
@@ -122,14 +133,20 @@
     }
 
     private ArrayList<int[]> wallPoints() {
+        tileInit();
         ArrayList<Wall> walls = this.variables.getWalls();
         ArrayList<int[]> wallPoints = new ArrayList<>();
-        for(Wall w: walls){
+        for (Wall w : walls) {
             //System.out.println(w.getPoints().size());
-            wallPoints.addAll(w.getPoints());
-            for(int[] xy : w.getPoints()){
+            ArrayList<int[]> wall = w.getPoints();
+            wallPoints.addAll(wall);
+            for (int[] xy : wall) {
+                System.out.println("wall xy"+xy[0]+", "+xy[1]);
+                this.map[xy[0]][xy[1]].placeWall();
+                System.out.println(this.map[xy[0]][xy[1]]);
+            }
         }
-        printWalls();
+        //printWalls();
         return wallPoints;
     }
 
@@ -194,7 +211,6 @@
             }
             s.append("\n");
         }
-
         return s.toString();
     }
 
Index: src/main/java/phase2/AgentTeam.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package phase2;\r\n\r\nimport phase2.RayCasting.RayCasting;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AgentTeam {\r\n    private ArrayList<Agent> team;\r\n    private int size;\r\n    private int type;\r\n    private ArrayList<int[]> spawnCoords; //list of x,y coordinates\r\n    private ArrayList<int[]> spawnPoints; //x,y coordinates of tiles in the spawn area\r\n    private ArrayList<int[]> agentPositions = new ArrayList<>();\r\n\r\n    /**\r\n     * COULD HAVE:\r\n     *  - the markers\r\n     *  - other shared data\r\n     * */\r\n\r\n    public AgentTeam(int size, int type, ArrayList<Integer> spawnCoords){\r\n        this.size = size;\r\n        this.type = type;\r\n        this.spawnCoords = initSpawnCoords(spawnCoords);\r\n        this.spawnPoints = initSpawnPoints();\r\n        this.team = new ArrayList<>();\r\n\r\n    }\r\n\r\n    /*\r\n    * placeOnSpawn : creates agents and places them all on spawn, before the agent list is empty\r\n    * */\r\n\r\n    public void placeOnSpawn(){\r\n        ArrayList<int[]> editedSpawn = this.spawnPoints;\r\n        if(this.size>this.spawnPoints.size()){\r\n            System.out.println(\"SPAWN: TOO MANY AGENTS, CAN'T PLACE ALL ON SPAWN\");\r\n        }\r\n        else {\r\n            for (int i = 0; i < this.size; i++) {\r\n                //int[] initAgentCoords = this.spawnPoints.get(i);\r\n                int[] initAgentCoords = getRandomSpawnPoint(editedSpawn);\r\n                editedSpawn.remove(initAgentCoords);\r\n                Agent agent;\r\n                if (type == 0) {\r\n                    agent = new Guard(0, initAgentCoords[0], initAgentCoords[1]);\r\n                } else if (type == 1) {\r\n                    agent = new Intruder(0, initAgentCoords[0], initAgentCoords[1]);\r\n                } else {\r\n                    agent = new Agent(0, 0, 0);\r\n                    System.out.println(\"WARNING: you are using wrong types in the agent team class\");\r\n                }\r\n                this.team.add(agent);\r\n            }\r\n        }\r\n        updateAgentPos();\r\n        System.out.println(\"agents type: \"+type+\" spawn coords: \\n\"+this.toString());\r\n    }\r\n\r\n    /*\r\n    * updateAgents: update data about each agent using the Agent class method\r\n    * */\r\n\r\n    public void updateAgents(Map map, RayCasting raycaster){\r\n        for(Agent agent: team){\r\n            agent.update(map, raycaster);\r\n        }\r\n        updateAgentPos();\r\n    }\r\n\r\n    private void updateAgentPos(){\r\n        ArrayList<int[]> positions = new ArrayList<>();\r\n        for(Agent a: team){\r\n            positions.add(a.getPosition());\r\n        }\r\n        this.agentPositions = positions;\r\n    }\r\n\r\n    /**\r\n     * INITIALIZERS\r\n     * */\r\n\r\n    /*\r\n    * initSpawnCoords: returns the coordinates of the spawn in an ArrayList<int[]> instead of ArrayList<Integer>\r\n    * */\r\n\r\n    private ArrayList<int[]> initSpawnCoords(ArrayList<Integer> values) {\r\n        int x1y1[] = new int[2];\r\n        int x2y2[] = new int[2];\r\n        x1y1[0] = values.get(0);\r\n        x1y1[1] = values.get(1);\r\n        x2y2[0] = values.get(4);\r\n        x2y2[1] = values.get(5);\r\n\r\n        ArrayList<int[]> coordinates = new ArrayList<>();\r\n        coordinates.add(x1y1);\r\n        coordinates.add(x2y2);\r\n        return coordinates;\r\n    }\r\n\r\n    /*\r\n    * initSpawnTilesEasy: returns a list of the coords of all tiles in the spawn\r\n    * in the order from bottom row to top\r\n    * */\r\n\r\n    private ArrayList<int[]> initSpawnPoints(){\r\n        int[] start = spawnCoords.get(0);\r\n        int[] end = spawnCoords.get(1);\r\n        ArrayList<int[]> tiles = new ArrayList<>();\r\n\r\n        int xLength = Math.abs(start[0]-end[0]);\r\n        int yLength = Math.abs(start[1]-end[1]);\r\n        for(int i = 0; i<yLength; i++){\r\n            for(int j = 0; j<xLength; j++){\r\n                int[] coords = new int[2];\r\n                coords[0] = j;\r\n                coords[1] = i;\r\n                tiles.add(coords);\r\n            }\r\n        }\r\n        return tiles;\r\n    }\r\n\r\n    /*\r\n    * getRandomSpawnPoint - returns a random element from the list\r\n    * containing spawn points\r\n    * */\r\n    private int[] getRandomSpawnPoint(ArrayList<int[]> coords){\r\n        int size = coords.size();\r\n        int i = (int) (size*Math.random());\r\n        return coords.get(i);\r\n    }\r\n\r\n    /** GETTERS AND SETTERS*/\r\n\r\n\r\n    public void setSpawnCoords(ArrayList<int[]> coordinates){\r\n        this.spawnCoords = coordinates;\r\n    }\r\n\r\n\r\n    public ArrayList<int[]> getSpawnCoords(){\r\n        return spawnCoords;\r\n    }\r\n\r\n    public ArrayList<int[]> getAgentPositions(){\r\n        return this.agentPositions;\r\n    }\r\n\r\n\r\n    public ArrayList<Agent> getTeam(){\r\n        return this.team;\r\n    }\r\n\r\n    public Agent getAgent(int i){\r\n        try{\r\n            return this.team.get(i);\r\n        }\r\n        catch(Exception e){\r\n            System.out.println(\"access agent in team; exception thrown: \"+e);\r\n        }\r\n        return new Agent(0,0,0);\r\n    }\r\n\r\n    public String toString(){\r\n        StringBuilder s = new StringBuilder();\r\n\r\n        for(Agent agent: team){\r\n            s.append(agent.toString());\r\n        }\r\n        return s.toString();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/phase2/AgentTeam.java b/src/main/java/phase2/AgentTeam.java
--- a/src/main/java/phase2/AgentTeam.java	
+++ b/src/main/java/phase2/AgentTeam.java	
@@ -12,6 +12,8 @@
     private ArrayList<int[]> spawnPoints; //x,y coordinates of tiles in the spawn area
     private ArrayList<int[]> agentPositions = new ArrayList<>();
 
+
+    /***/
     /**
      * COULD HAVE:
      *  - the markers
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"99094a21-1a8a-4d5d-8078-78165bded4be\" name=\"Changes\" comment=\"raycasting finished 2.0\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Agents/Tile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Agents/Tile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Controller/Wall.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Controller/Wall.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/phase2/Agent.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/phase2/Agent.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/phase2/Map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/phase2/Map.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/phase2/Tester.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/phase2/Tester.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"6ea49bdf-bb2d-46db-bf83-6ad5f455a4ff\" name=\"Changes by alisatodorova\" comment=\"\" />\r\n    <list id=\"c1d8c12b-8388-4e92-b4e4-cbc79450751e\" name=\"Changes by Bruikleen 3\" comment=\"\" />\r\n    <list id=\"70e5dc33-d91b-495a-a940-6f15d4c62e05\" name=\"Changes by cmjus\" comment=\"\" />\r\n    <list id=\"3f4196c9-b984-4db7-880a-412dc16d5bb0\" name=\"Changes by nathaliebent\" comment=\"\" />\r\n    <list id=\"28c4b3f6-7dbb-4f58-84c5-c3e4fa0eeec9\" name=\"Changes by tiphanie\" comment=\"\" />\r\n    <list id=\"02a2e82e-c7a5-407b-9645-c555f1108ddc\" name=\"Changes by vikramvenkat\" comment=\"\" />\r\n    <list id=\"7ab52772-061c-4b8d-aeb6-872a88f8cd11\" name=\"Changes by zmilc\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"algoWithoutControllers\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"phase2-main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"256KGD7WaqHSuu6w26u96APtVh7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"Git.Branch.Popup.ShowAllRemotes\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Collin\\IdeaProjects\\Project2-2\\src\\main\\java\\phase2\\RayCasting\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Tester (1)\">\r\n    <configuration name=\"App (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Visuals.App\" />\r\n      <module name=\"Project2-2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Visuals.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"App\" />\r\n      <module name=\"Project2-2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StartGame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Visuals.main.StartGame\" />\r\n      <module name=\"Project2-2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Visuals.main.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tester (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"phase2.Tester\" />\r\n      <module name=\"Project2-2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"phase2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tester\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"newShit.Tester\" />\r\n      <module name=\"Project2-2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"newShit.RayCasting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Tester (1)\" />\r\n        <item itemvalue=\"Application.Tester\" />\r\n        <item itemvalue=\"Application.App\" />\r\n        <item itemvalue=\"Application.StartGame\" />\r\n        <item itemvalue=\"Application.App (1)\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"99094a21-1a8a-4d5d-8078-78165bded4be\" name=\"Changes\" comment=\"\" />\r\n      <created>1644842061035</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1644842061035</updated>\r\n      <workItem from=\"1645613588695\" duration=\"4441000\" />\r\n      <workItem from=\"1645701760031\" duration=\"1105000\" />\r\n      <workItem from=\"1645703087376\" duration=\"849000\" />\r\n      <workItem from=\"1646843973500\" duration=\"600000\" />\r\n      <workItem from=\"1646860924200\" duration=\"3000\" />\r\n      <workItem from=\"1646942626523\" duration=\"773000\" />\r\n      <workItem from=\"1647013578057\" duration=\"1492000\" />\r\n      <workItem from=\"1647040837289\" duration=\"541000\" />\r\n      <workItem from=\"1647085098955\" duration=\"1033000\" />\r\n      <workItem from=\"1647118917540\" duration=\"2359000\" />\r\n      <workItem from=\"1647164209058\" duration=\"1514000\" />\r\n      <workItem from=\"1647172804683\" duration=\"1483000\" />\r\n      <workItem from=\"1647268426736\" duration=\"1366000\" />\r\n      <workItem from=\"1647344510279\" duration=\"757000\" />\r\n      <workItem from=\"1647358927164\" duration=\"641000\" />\r\n      <workItem from=\"1647378048259\" duration=\"3000\" />\r\n      <workItem from=\"1647428403131\" duration=\"600000\" />\r\n      <workItem from=\"1647433146518\" duration=\"3026000\" />\r\n      <workItem from=\"1647454508975\" duration=\"1249000\" />\r\n      <workItem from=\"1647462847240\" duration=\"118000\" />\r\n      <workItem from=\"1647552591607\" duration=\"2901000\" />\r\n      <workItem from=\"1647687753045\" duration=\"3000\" />\r\n      <workItem from=\"1647776788809\" duration=\"5086000\" />\r\n      <workItem from=\"1647855880434\" duration=\"2200000\" />\r\n      <workItem from=\"1647862599612\" duration=\"6146000\" />\r\n      <workItem from=\"1649164305482\" duration=\"9029000\" />\r\n      <workItem from=\"1650536841238\" duration=\"2710000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"starting code is from Controller-For-Merge branch\">\r\n      <created>1645613707001</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645613707001</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"A* algorithm\">\r\n      <created>1645616987133</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645616987133</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"A* algorithm\">\r\n      <created>1645617009022</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645617009022</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"library for javafx\">\r\n      <created>1645703247369</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645703247369</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"astar + gui\">\r\n      <created>1646836684617</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646836684617</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"astar + gui\">\r\n      <created>1646837686031</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646837686031</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"last one\">\r\n      <created>1647778997580</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1647778997580</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"last changes\">\r\n      <created>1647945236626</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1647945236627</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"last changes\">\r\n      <created>1647946549045</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1647946549045</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"the many else if statements corrected\">\r\n      <created>1647949410378</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1647949410378</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"raycasting finished\">\r\n      <created>1650467740614</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1650467740614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"raycasting finished 2.0\">\r\n      <created>1651748388524</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651748388524</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"starting code is from Controller-For-Merge branch\" />\r\n    <MESSAGE value=\"A* algorithm\" />\r\n    <MESSAGE value=\"library for javafx\" />\r\n    <MESSAGE value=\"astar + gui\" />\r\n    <MESSAGE value=\"last one\" />\r\n    <MESSAGE value=\"last changes\" />\r\n    <MESSAGE value=\"the many else if statements corrected\" />\r\n    <MESSAGE value=\"raycasting finished\" />\r\n    <MESSAGE value=\"raycasting finished 2.0\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"raycasting finished 2.0\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -6,11 +6,11 @@
   <component name="ChangeListManager">
     <list default="true" id="99094a21-1a8a-4d5d-8078-78165bded4be" name="Changes" comment="raycasting finished 2.0">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Agents/Tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Agents/Tile.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Controller/Wall.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Controller/Wall.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/phase2/Agent.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/phase2/Agent.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/phase2/AgentTeam.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/phase2/AgentTeam.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/phase2/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/phase2/Map.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/phase2/Tester.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/phase2/Tester.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Controller/Wall.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Controller/Wall.class" afterDir="false" />
     </list>
     <list id="6ea49bdf-bb2d-46db-bf83-6ad5f455a4ff" name="Changes by alisatodorova" comment="" />
     <list id="c1d8c12b-8388-4e92-b4e4-cbc79450751e" name="Changes by Bruikleen 3" comment="" />
@@ -272,7 +272,14 @@
       <option name="project" value="LOCAL" />
       <updated>1651748388524</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="raycasting finished 2.0">
+      <created>1651751673646</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1651751673646</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
