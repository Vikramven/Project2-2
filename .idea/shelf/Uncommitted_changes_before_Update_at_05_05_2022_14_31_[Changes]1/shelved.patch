Index: src/main/java/phase2/Tester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package phase2;\r\n\r\nimport Controller.ReadFiles;\r\npublic class Tester {\r\n\r\n    public static void main(String args[]){\r\n\r\n        String path = \"\";\r\n        String[] unparsedVars = new String[0];\r\n        try {\r\n            unparsedVars = ReadFiles.readFileAsString(\"recources/testmap.txt\");\r\n        } catch (Exception e) {\r\n            System.out.println(\"AAAAAAAAAAAAAAAAAAa\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Map map = new Map(unparsedVars);\r\n        map.allAgentsInit();\r\n        System.out.println(map);\r\n        //map.updateAllAgents();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/phase2/Tester.java b/src/main/java/phase2/Tester.java
--- a/src/main/java/phase2/Tester.java	
+++ b/src/main/java/phase2/Tester.java	
@@ -16,7 +16,7 @@
 
         Map map = new Map(unparsedVars);
         map.allAgentsInit();
-        System.out.println(map);
+        //System.out.println(map);
         //map.updateAllAgents();
     }
 }
Index: src/main/java/Controller/Wall.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Wall extends Rectangle {\r\n\r\n    public Wall(int x1, int y1,int x3,int y3){\r\n        super(x1,y1,x3,y3);\r\n    }\r\n\r\n    public ArrayList<int[]> getPoints(){\r\n        int[] start = new int[2];\r\n        int[] end = new int[2];\r\n\r\n        start[0] = coords.get(0);\r\n        start[1] = coords.get(1);\r\n\r\n        end[0] = coords.get(4);\r\n        end[1] = coords.get(5);\r\n\r\n        ArrayList<int[]> points = new ArrayList<>();\r\n\r\n        int xLength = Math.abs(start[0]-end[0]);\r\n        int yLength = Math.abs(start[1]-end[1]);\r\n        for(int i = 0; i<yLength; i++){\r\n            for(int j = 0; j<xLength; j++){\r\n                int[] coords = new int[2];\r\n                coords[0] = j;\r\n                coords[1] = i;\r\n                points.add(coords);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Controller/Wall.java b/src/main/java/Controller/Wall.java
--- a/src/main/java/Controller/Wall.java	
+++ b/src/main/java/Controller/Wall.java	
@@ -12,24 +12,39 @@
         int[] start = new int[2];
         int[] end = new int[2];
 
-        start[0] = coords.get(0);
-        start[1] = coords.get(1);
-
-        end[0] = coords.get(4);
-        end[1] = coords.get(5);
-
         ArrayList<int[]> points = new ArrayList<>();
 
-        int xLength = Math.abs(start[0]-end[0]);
-        int yLength = Math.abs(start[1]-end[1]);
-        for(int i = 0; i<yLength; i++){
-            for(int j = 0; j<xLength; j++){
-                int[] coords = new int[2];
-                coords[0] = j;
-                coords[1] = i;
-                points.add(coords);
-            }
+        for(int i=coords.get(0);i<=coords.get(2);i++){
+            int[] c = new int[2];
+            c[0] = i;
+            c[1] = coords.get(1);
+            points.add(c);
+        }
+        for(int i=coords.get(6);i<=coords.get(4);i++){
+            int[] c = new int[2];
+            c[0] = i;
+            c[1] = coords.get(5);
+            points.add(c);
         }
+
+        for(int i=coords.get(1);i<=coords.get(7);i++){
+            int[] c = new int[2];
+            c[0] = coords.get(0);
+            c[1] = i;
+            points.add(c);
+        }
+
+        for(int i=coords.get(3);i<=coords.get(5);i++){
+            int[] c = new int[2];
+            c[0] = coords.get(2);
+            c[1] = i;
+            points.add(c);
+        }
+
+        for(int[] p: points){
+            System.out.println(p[0]+", "+p[1]);
+        }
+
         return points;
     }
 
